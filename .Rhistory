getwd()
unzip("activity.zip")
activity_df<-read.csv("activity.csv")
head(activity_df)
str(activity_df)
?read.csv
activity_df<-read.csv("activity.csv",colClasses=c(int,Date,int))
activity_df<-read.csv("activity.csv",colClasses=c(numeric,Date,numeric))
activity_df<-read.csv("activity.csv",colClasses=c("integer","Date","integer"))
str(activity_df)
activity<-read.csv("activity.csv",colClasses=c("integer","Date","integer"))
head(activity)
hist(activity$interval)
hist(activity$steps)
hist(activity$steps, breaks=30)
hist(activity$steps, breaks=30, xlab="Steps", main="Histogram of Steps per Day")
mean(activity$steps)
mean(activity$steps, na.rm=T)
meidan(activity$steps, na.rm=T)
median(activity$steps, na.rm=T)
median(activity$steps, na.rm=T)
sum(activity$steps==0)
sum(activity$steps==0, na.rm=T)
nrow(activity$steps)
nrow(activity)
mean(activity$steps, na.rm=T)
head(activity)
unzip("activity.zip")
activity<-read.csv("activity.csv",colClasses=c("integer","Date","integer"))
hist(activity$steps, breaks=30, xlab="Steps", main="Histogram of Steps per Day")
mean(activity$steps, na.rm=T)
median(activity$steps, na.rm=T)
head(activity)
?weekdays()
activity
head(activity)
head(weekdays(activity$date))
class(head(weekdays(activity$date)))
test <- mutate(activity, day=weekdays(date))
library(dplyr)
test <- mutate(activity, day=weekdays(date))
head(test)
str(test)
?split
activity_weekend_index<-activity$day==c("Saturday","Sunday")
source('~/.active-rstudio-document', echo=TRUE)
activity[activity_weekend_index,]
head(activity)
hotcold <- group_by(activity[activity_weekend_index], interval)
hotcold <- group_by(activity[activity_weekend_index,], interval)
head(hotcold)
summarize(g, steps = sum(steps, na.rm = TRUE)
)
g <- group_by(activity[activity_weekend_index,], interval)
summarize(g, steps = sum(steps, na.rm = TRUE))
g
g
head(g, n=40)
g <- group_by(activity[activity_weekend_index,], interval)
summarize(g, steps = sum(steps, na.rm = TRUE))
head(activity[activity_weekend_index,])
g <- group_by(activity[activity_weekend_index,], interval)
g
summarize(g, steps_sum = sum(steps, na.rm = TRUE))
unique(activity$interval)
summarize(g, steps_sum = sum(steps, na.rm = TRUE))
s<-summarize(g, steps_sum = sum(steps, na.rm = TRUE))
head(s, n=100)
class(s)
nrow(s)
plot(s)
plot(s, type="l")
plot(s, type="l", y="Number of steps")
plot(s, type="l", y="Number of steps", x="Interval")
plot(s, type="l", y="Number of steps", xlab="Interval")
plot(s, type="l", ylab="Number of steps", xlab="Interval")
plot_interval<-function(df){
g <- group_by(df, interval)
s<-summarize(g, steps_sum = sum(steps, na.rm = TRUE))
plot(s, type="l", ylab="Number of steps", xlab="Interval")
}
plot_interval(activity[activity_weekend_index,])
plot_interval(activity[!activity_weekend_index,])
plot_interval(activity[activity_weekend_index,])
plot_interval(activity[!activity_weekend_index,])
par(ncol=2)
?par
par(mfrow=c(2,1))
plot_interval(activity[activity_weekend_index,])
plot_interval(activity[!activity_weekend_index,])
par(mfrow=c(2,1))
plot_interval(activity[activity_weekend_index,])
plot_interval(activity[!activity_weekend_index,])
par(mfrow=c(2,1))
plot_interval(activity[activity_weekend_index,])
plot_interval(activity[!activity_weekend_index,])
g <- group_by(activity, interval)
s<-summarize(g, steps_sum = sum(steps, na.rm = TRUE))
s
max(s$steps_sum)
s[max(s$steps_sum),]
which.max(s$steps_sum)
s[which.max(s$steps_sum),]
max_interval$interval
s<-summarize(g, steps_sum = sum(steps, na.rm = TRUE))
max_interval<-s[which.max(s$steps_sum),]
max_interval$interval
names(activity)
names(activity)
is.na(activity$steps)
sum(is.na(activity$steps))
weekday_steps<-interval_steps(activity[activity_weekend_index,])
weekend_steps<-interval_steps(activity[!activity_weekend_index,])
interval_steps<-function(df){
g <- group_by(df, interval)
summarize(g, steps_sum = sum(steps, na.rm = TRUE))
}
weekday_steps<-interval_steps(activity[activity_weekend_index,])
weekend_steps<-interval_steps(activity[!activity_weekend_index,])
weekday_steps<-interval_steps(activity[activity_weekend_index,])
weekend_steps<-interval_steps(activity[!activity_weekend_index,])
par(mfrow=c(2,1))# bit rough should do this in ggplot
plot(weekday_steps, type="l", ylab="Number of steps", xlab="Interval")
plot(weekend_steps, type="l", ylab="Number of steps", xlab="Interval")
plot(weekday_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekday Steps")
plot(weekend_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekend Steps")
weekend_steps<-interval_steps(activity[activity_weekend_index,])
weekday_steps<-interval_steps(activity[!activity_weekend_index,])
par(mfrow=c(2,1))# bit rough should do this in ggplot
plot(weekday_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekday Steps")
plot(weekend_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekend Steps")
par(mfrow=c(1,1))
steps<-interval_steps(activity)
max_interval<-s[which.max(steps$steps_sum),]
max_interval$interval
all_steps<-interval_steps(activity)
max_interval<-all_steps[which.max(all_steps$steps_sum),]
max_interval$interval
head(activity)
all_steps
all_steps$interval==5
all_steps[all_steps$interval==5,]
all_steps[all_steps$interval==5,]$steps_sum
all_steps[all_steps$interval==5,]$steps_sum
head(activity)
set_step<-function(step){
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
head(activity)
res<-mutate(activity, aaa=set_step(steps))
res<-mutate(activity, aaa=set_step(steps))
sapply(activity,set_step(steps))
sapply(activity,set_step(x$steps))
head(activity)
sapply(activity,function(x){x})
sapply(activity,function(x){x$steps})
sapply(activity,function(x){x[2]})
sapply(activity,function(x){nrow(x)})
sapply(activity,function(x){x}
sapply(activity,function(x){x}
sapply(activity,function(x){x})
sapply(activity,function(x){x[1,]})
sapply(activity,function(x){x[,1]})
sapply(activity,function(x){class(x)})
sapply(activity,function(x){x$steps})
sapply(activity,function(x){x})
sapply(activity,function(x){x[1]})
sapply(activity,function(x){x[,1]})
sapply(activity,function(x){x})
sapply(activity,function(x){class(x)})
sapply(activity,function(x){nrow(x)})
apply(activity,1,function(x){nrow(x)})
apply(activity,1,function(x){x})
apply(activity,1,function(x){x})
apply(activity,1,function(x){class(x)})
headapply(activity,1,function(x){x}))
head(apply(activity,1,function(x){x}))
head(apply(activity,1,function(x){x}))
head(apply(activity,2,function(x){x}))
head(apply(activity,2,function(x){x$steps}))
head(apply(activity,2,function(x){x[1]}))
head(apply(activity,2,function(x){x[,1]}))
head(apply(activity,2,function(x){x}))
head(apply(activity,2,function(x){names(x)}))
head(apply(activity,2,function(x){class(x)}))
head(apply(activity,2,function(x){x[[1]])
head(apply(activity,2,function(x){x[[1]]))
head(apply(activity,2,function(x){x[1]))
head(apply(activity,2,function(x){x[1]}))
apply(activity,2,function(x){x[1]})
apply(activity,2,function(x){x})
nrow(apply(activity,2,function(x){x}))
nrow(activity)
head(apply(activity,2,function(x){x}))
class(head(apply(activity,2,function(x){x})))
apply(activity,2,function(x){x})
apply(activity,2,function(x){class(x)})
head(apply(activity,2,function(x){x[1]}))
head(apply(activity,2,function(x){x[]}))
head(apply(activity,2,function(x){x[][1]}))
head(apply(activity,2,function(x){x[]}))
head(apply(activity,1,function(x){x[]}))
head(apply(activity,1,function(x){x[1]}))
head(apply(activity,1,function(x){x[,1]}))
head(apply(activity,1,function(x){x[2]}))
head(activity)
head(apply(activity,1,function(x){x[1]}))
head(apply(activity,1,set_step(x[1])}))
head(apply(activity,1,set_step(x[1])))
set_step<-function(step){
step
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
set_step<-function(step){
print(step)
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
res<-mutate(activity, aaa=set_step(steps))
head(apply(activity,1,set_step(x[1])))
head(apply(activity,1,set_step(x[1])))
head(apply(activity,1,set_step(x[1])))
head(apply(activity,1,set_step(x[1])))
apply(activity,2,function(x){class(x)})
apply(activity,2,function(x){class(x[1])})
apply(activity,2,function(x){print(x[1])})
2
head(apply(activity,1,function(x){x[2]}))
head(apply(activity,1,function(x){x[1]}))
set_step<-function(row){
step<-row[1]
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
head(apply(activity,1,set_step(row))
)
head(apply(activity,1,set_step(row)))
head(apply(activity,1,function(x){x[1]}))
head(apply(activity,1,set_step(row)))
set_step<-function(row){
print(step)
step<-row[1]
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
head(apply(activity,1,set_step(row)))
set_step<-function(r){
step<-r[1]
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
head(apply(activity,1,set_step(r)))
head(apply(activity,1,set_step(x)))
head(apply(activity,1,function(x){x[1]}))
set_step<-function(step){
if(is.na(steps)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
head(apply(activity,1,function(x){set_step(x[1])}))
head(apply(activity,1,function(x){x[1]}))
head(apply(activity,1,function(x){x[1]}), n=30)
new_steps<-integer()
new_steps
activity[1,]$steps
for(i in 1:nrow(activity)){
set_step(activity[i,]$steps)
}
warnings()
activity[1,]$steps
set_step<-function(step){
if(is.na(step)){
step<-all_steps[all_steps$interval==5,]$steps_sum
}
step
}
for(i in 1:nrow(activity)){
set_step(activity[i,]$steps)
}
for(i in 1:nrow(activity)){
print(set_step(activity[i,]$steps))
}
head(apply(activity,1,set_step(x)))
head(apply(activity,1,function(x){set_step(x[1])}), n=30)
new_steps<-integer()
for(i in 1:nrow(activity)){
new_steps<-c(new_steps,set_step(activity[i,]$steps))
}
new_steps[1]
activity[1,]$steps
activity[1,]
steps_all
all_steps
set_step<-function(step){
if(is.na(step)){
step<-all_steps[all_steps$interval==step$interval,]$steps_sum
}
step
}
new_steps<-integer()
for(i in 1:nrow(activity)){
new_steps<-c(new_steps,set_step(activity[i,]$steps))
}
activity[1,]
set_step<-function(r){
step<-r$steps
if(is.na(step)){
step<-all_steps[all_steps$interval==r$interval,]$steps_sum
}
step
}
activity[1,]
new_steps[1]
step<-steps[1,]
step<-r$steps
r<-steps[1,]
r
r<-activity[1,]
r
step<-r$steps
if(is.na(step)){
step<-all_steps[all_steps$interval==r$interval,]$steps_sum
}
step
set_step<-function(r){
step<-r$steps
if(is.na(step)){
step<-all_steps[all_steps$interval==r$interval,]$steps_sum
}
step
}
activity[1,]
set_step(activity[1,])
new_steps[1]
new_steps<-integer()
for(i in 1:nrow(activity)){
new_steps<-c(new_steps,set_step(activity[i,]$steps))
}
new_steps<-integer()
for(i in 1:nrow(activity)){
new_steps<-c(new_steps,set_step(activity[i,]))
}
activity[1,]
new_steps[1,]
nrow(new_steps)
new_steps
class(new_steps)
new_steps[1]
activity$steps
activity$steps<-new_steps
activity$steps
activity$steps[1,]
activity[1,]
res<-mutate(activity, aaa=set_step(steps))
install.packages("UsingR")
library(UsingR)
g <- ggplot(galton, aes(x = child))
# add histogram for children data
g <- g + geom_histogram(fill = "salmon", binwidth=1, aes(y=..density..), colour="black")
# add density smooth
g <- g + geom_density(size = 2)
# add vertical line
g <- g + geom_vline(xintercept = mean(galton$child), size = 2)
# print graph
g
library(manipulate)
manipulate(plot(1:x), x = slider(1, 100))
manipulate(plot(1:x), x = slider(1, 100))
