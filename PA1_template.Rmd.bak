---
title: 'Reproducible Research: Peer Assessment 1'
output:
  html_document:
    keep_md: yes
  pdf_document: default
---
<!--
# setwd("Z:/docs/work/datasci/5reproducible-research/RepData_PeerAssessment1")
# library(knitr)
# knit2html("PA1_template.Rmd")
-->


## Loading and preprocessing the data
```{r}
if (!file.exists("activity.csv")) {# check if exists
  unzip("activity.zip")
}
activity<-read.csv("activity.csv",colClasses=c("integer","Date","integer"))
```

## What is the mean total number of steps taken per day?
**1. Calculate the total number of steps taken per day**
```{r}
library(dplyr)
g_date <- group_by(activity, date)
steps_per_day<-summarize(g_date, steps = sum(steps, na.rm = TRUE))
# aggregate(steps ~ date, activity, sum) # agreate removes some dates so is not the best method
```

**2. Historgram of Steps Per day**
```{r}
# barplot with a space set to 0 is a histogram
barplot(steps_per_day$steps, names.arg=steps_per_day$date, ylim=c(0, 25000), xlab="date", ylab="steps",main="Histogram of Steps per Day",space=0)
```

**3. Calculate and report the mean and median of the total number of steps taken per day**
```{r}
mean(steps_per_day$steps)
median(steps_per_day$steps)
```


## What is the average daily activity pattern?

**1. Plot of Average Daily Activity Pattern**
```{r}
average_steps<-function(activity){# defined so we can use later
  days<-length(unique(activity$date))
  g <- group_by(activity, interval)
  average_steps<-summarize(g, average = sum(steps, na.rm = TRUE)/days)
}
average_fivemin_steps<-average_steps(activity)
plot(average_fivemin_steps, type="l", ylab="Steps", xlab="Interval", main="Plot of Average Daily Activity Pattern")

```

**2. 5-minute Interval with Most Number of Steps on average**
```{r}
max_interval<-average_fivemin_steps[which.max(average_fivemin_steps$average),]
max_interval$interval

```

## Inputing missing values
**1. Total number of missing values:**
```{r}
sum(is.na(activity$steps))
```


**2. Fill NA's by the mean for that 5 minute interval day (this is lazy but will do for this exercise):**

```{r}
set_step<-function(r){
  step<-r$steps
  if(is.na(step)){
    # set step to mean for the day
    step<-average_fivemin_steps[average_fivemin_steps$interval==r$interval,]$average
  } 
  step
}
new_steps<-integer()
for(i in 1:nrow(activity)){
  new_steps<-c(new_steps,set_step(activity[i,]))
}

```

**3. Create a new dataset that is equal to the original dataset but with the missing data filled in.**

```{r}
activity$steps<-new_steps
```

**4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps**
```{r}
# recalculate steps per day
g_date <- group_by(activity, date)
steps_per_day<-summarize(g_date, steps = sum(steps, na.rm = TRUE))
hist(steps_per_day$steps, breaks=30, xlab="Steps", main="Histogram of Steps per Day")
mean(steps_per_day$steps)
median(steps_per_day$steps)

```

The mean differs, as it is larger. Substituting the mean for the NA values increases the mean probably to an unrealistically large value. However the median does not change, this is as there are still the middle value. (If I had used agreegate however this would give different answers)



## Are there differences in activity patterns between weekdays and weekends?
```{r}
activity <- mutate(activity, day=factor(weekdays(activity$date)))
activity_weekend_index<-activity$day==c("Saturday","Sunday")
weekend_steps<-average_steps(activity[activity_weekend_index,])
weekday_steps<-average_steps(activity[!activity_weekend_index,])

plot(all_steps, type="l")
par(mfrow=c(2,1))# bit rough should do this in ggplot
plot(weekday_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekday Steps")
plot(weekend_steps, type="l", ylab="Number of steps", xlab="Interval", main="Weekend Steps")
par(mfrow=c(1,1))
```